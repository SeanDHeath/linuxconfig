---
    - name: "Configuration for Desktop"
      hosts: localhost
      vars:
        packages:
          - progress
          - vim
          - keepassxc
          - aptitude
          - htop
          - golang
          - tree
          - secure-delete
          - virt-manager
          - nordvpn
          - syncthing-gtk
          - build-essential
          - cmake
          - python3-dev
      tasks:

        - name: "Gather package facts"
          become: yes
          package_facts:
            manager: "apt"

        - name: "Install NordVPN deb"
          become: yes
          apt:
            deb: "https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn-release_1.0.0_all.deb"
          when: "'nordvpn' not in ansible_facts.packages"

        - name: "Add syncthing repo"
          become: yes
          apt_key:
            url: "https://syncthing.net/release-key.txt"
            state: present
          when: "'syncthing' not in ansible_facts.packages"

        - name: "Install Slack"
          become: yes
          apt:
            deb: "https://downloads.slack-edge.com/linux_releases/slack-desktop-4.1.1-amd64.deb"
          when: "'slack' not in ansible_facts.packages"

        - name: "Install packages"
          become: yes
          apt:
            name: "{{ packages }}"
            state: latest

        - name: "Install Keybase"
          become: yes
          apt:
            deb: "https://prerelease.keybase.io/keybase_amd64.deb"
          when: "'keybase' not in ansible_facts.packages"

        - name: "Check if Joplin is installed"
          stat:
            path: "~/.joplin/Joplin.AppImage"
          register: joplin_details

        - name: "Download Joplin"
          get_url:
            url: "https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh"
            dest: /tmp/joplin.sh
          when: joplin_details.stat.exists == false

        - name: "Install Joplin"
          shell: "/bin/bash /tmp/joplin.sh"
          when: joplin_details.stat.exists == false

        - name: "Add user to libvirt group"
          become: yes
          user:
            name: "{{ ansible_user_id }}"
            groups: "libvirt"
            append: yes

        - name: "Enable libvirtd"
          become: yes
          systemd:
            name: "libvirtd"
            state: started
            enabled: yes

        - name: "Clone VIM config"
          git:
            repo: "https://seandheath@github.com/seandheath/vim.git"
            dest: "~/.vim"
          register: vim_output
          ignore_errors: yes

        - name: "Run VIM setup"
          shell: "~/.vim/setup.sh"
          when: vim_output['before'] != vim_output['after']
          ignore_errors: yes

        - name: "Clone bash config"
          git:
            repo: "https://seandheath@github.com/seandheath/bash.git"
            dest: "~/.bash"
          register: bash_output
          ignore_errors: yes

        - name: "Run bash setup"
          shell: "~/.bash/setup.sh"
          when: bash_output['before'] != bash_output['after']
          ignore_errors: yes

        - name: "Install gTile extension"
          git:
            repo: "https://github.com/gTile/gTile.git"
            dest: "~/.local/share/gnome-shell/extensions/gTile@vibou"
